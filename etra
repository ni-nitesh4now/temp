#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Define the fit strategies
#define FIRST_FIT 0
#define NEXT_FIT  1
#define BEST_FIT  2
#define WORST_FIT 3

// Define the fit strategy to be tested
#define FIT_STRATEGY FIRST_FIT

// Function to test memory allocation and deallocation
void testMemoryAllocation() {
    const int num_allocations = 10;
    const size_t block_size = 32;

    void* allocated_ptrs[num_allocations];

    printf("Testing Memory Allocation with %s Fit Strategy\n",
           FIT_STRATEGY == FIRST_FIT ? "First" :
           FIT_STRATEGY == NEXT_FIT ? "Next" :
           FIT_STRATEGY == BEST_FIT ? "Best" : "Worst");

    // Allocate memory blocks
    for (int i = 0; i < num_allocations; ++i) {
        allocated_ptrs[i] = malloc(block_size);
        if (allocated_ptrs[i] == NULL) {
            fprintf(stderr, "Memory allocation failed\n");
            exit(EXIT_FAILURE);
        }
        printf("Allocated memory block %d at address %p\n", i+1, allocated_ptrs[i]);
    }

    // Free memory blocks
    for (int i = 0; i < num_allocations; ++i) {
        free(allocated_ptrs[i]);
        printf("Freed memory block %d at address %p\n", i+1, allocated_ptrs[i]);
    }
}

int main() {
    // Test memory allocation and deallocation
    testMemoryAllocation();

    return 0;
}
